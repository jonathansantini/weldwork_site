<script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js"></script>
<style>
  #shopify-section-{{ section.id }} {
    margin-top: {{ section.settings.marTop | times: 100 | divided_by: 1440.0 }}vw;
    margin-bottom: {{ section.settings.marBottom | times: 100 | divided_by: 1440.0 }}vw;
    padding-top: {{ section.settings.padTop | times: 100 | divided_by: 1440.0 }}vw;
    padding-bottom: {{ section.settings.padBottom | times: 100 | divided_by: 1440.0 }}vw;
    padding-left: {{ section.settings.padLeft | times: 100 | divided_by: 1440.0 }}vw;
    padding-right: {{ section.settings.padRight | times: 100 | divided_by: 1440.0 }}vw;
    background-color: {{ section.settings.backgroundColor }};
  }
  @media only screen and (max-width: 1009px) {
    #shopify-section-{{ section.id }} {
      margin-top: {{ section.settings.marTopMob }}px;
      margin-bottom: {{ section.settings.marBottomMob }}px;
      padding-top: {{ section.settings.padTopMob }}px;
      padding-bottom: {{ section.settings.padBottomMob }}px;
      padding-left: {{ section.settings.padLeftMob }}px;
      padding-right: {{ section.settings.padRightMob }}px;
    }
  }
</style>
{% assign padRight =  section.settings.padLeft | minus: section.settings.padRight %}
<style>
  .numberOf {
  	display: none!important;
  }
  @media only screen and (min-width: 1009px) {
  .byFunction {
    width: calc(100vw - 12.22vw);
    margin-left: calc(({{ section.settings.padLeft | times: 100 | divided_by: 1440.0 }}vw - 6.11vw) * (-1));
    border-top: 1px solid #C3C3C3;
	border-bottom: 1px solid #C3C3C3;
    padding: 14px;
    display: flex;
    padding-bottom: unset;
    /* justify-content: center; */
    margin-bottom: {{ 46 | times: 100 | divided_by: 1440.0 }}vw;
    /* max-height: 5.77vw; */ 
   }
  .functionButton {
  	font-size: {{ 16 | times: 100 | divided_by: 1440.0 }}vw;
    line-height: {{ 19.68 | times: 100 | divided_by: 1440.0 }}vw;
    padding: {{ 12 | times: 100 | divided_by: 1440.0 }}vw {{ 16 | times: 100 | divided_by: 1440.0 }}vw;
    border: 1px solid #C3C3C3;
    margin-right: {{ 17 | times: 100 | divided_by: 1440.0 }}vw;
    cursor: pointer;
    transition: all .6s ease-out;
    margin-bottom:14px;
  }
  .functionButton .numberOf {
  	font-size: {{ 10 | times: 100 | divided_by: 1440.0 }}vw;
    line-height: {{ 12.36 | times: 100 | divided_by: 1440.0 }}vw;
    bottom: 4px;
    position: relative;
  }
  .cancelFunc {
    display: none;
  	margin-left: {{ 14 | times: 100 | divided_by: 1440.0 }}vw;
  }
  .functionButton.active {
  	background: #000;
    color: #fff;
    margin-bottom: 14px;
  }
  .functionButton:hover {
  	background: #000;
    color: #fff;
  }
    .functionButton.active:hover {
    	opacity: 0.5;
    }
  .functionButton.active .cancelFunc {
  	display: inline-block;
  }
  }
  @media only screen and (max-width: 1009px) {
  .byFunction {
    width: 100vw;
    max-width: 100vw;
    overflow-y: scroll;
    margin-left: -20px;
    border-top: 0px;
	border-bottom: 0px;
    padding: 20px;
    padding-right: 5px;
    display: flex;
    margin-bottom: 26px;
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
    position: unset;
    z-index: 5;
    background: white;
    flex-wrap: wrap;
   }
   .byFunction::-webkit-scrollbar {
      display: none;
    }
  .functionButton {
  	font-size: 16px;
    line-height: 19.68px;
    padding: 12px 16px;
    border: 1px solid #C3C3C3;
    margin-right: 5px;
    margin-bottom: 5px;
    cursor: pointer;
    white-space: nowrap;
  }
  .functionButton .numberOf {
  	font-size: 10px;
    line-height: 12.36px;
    bottom: 4px;
    position: relative;
  }
  .cancelFunc {
    display: none;
  	margin-left: 14px;
  }
  .functionButton.active {
  	background: #000;
    color: #fff;
  }
  .functionButton.active .cancelFunc {
  	display: inline-block;
  }
  }
</style>
{% assign string = "" %}
{% for block in section.blocks %}
{% assign count = 0 %}
{% for bl in section.blocks %}
{% if bl.settings.category == block.settings.category %}
{% assign count = count | plus: 1 %}
{% endif %}
{% endfor %}
{% unless string contains block.settings.category  %}
{% capture string %}{{ string }}{{ block.settings.category }}_{{ count }}|{% endcapture string %}
{% endunless %}
{% endfor %}
{% assign array = string | split: "|" %}
<div class="flexDiv fullWidth byFunction">
  <div class="functionButton GT-600 active allFunc">All Rooms <span class="numberOf">{{ section.blocks.size }}</span>
  </div>
   {% for str in array %}
  <div filter="{{ str | split: "_" | first | replace: " ", "-" }}" class="functionButton otherFunc GT-600">{{ str | split: "_" | first }} <span class="numberOf">{{ str | split: "_" | last }}</span>
    <span class="cancelFunc">
    <svg xmlns="http://www.w3.org/2000/svg" width="9" height="10" viewBox="0 0 9 10" fill="none">
      <path d="M1 8.20817L8 1.7915" stroke="white" stroke-width="2"/>
      <path d="M7.70768 8.5L1.29102 1.5" stroke="white" stroke-width="2"/>
    </svg>
    </span>
  </div>
  {% endfor %}
</div>
<div style="justify-content: space-between;" class="flexDiv masonryDiv galleryHolder">
 {% for block in section.blocks %} 
  <div src="{{ block.settings.image | img_url: "x920" }}" filterBy="{{ block.settings.category | replace: " ", "-" }}" class="galleryImageDiv galleryMainHolder modalImage">
   	<img class="galleryImageVis" src="{{ block.settings.image | img_url: "x720" }}">
    <div class="galleryImageAbs">
    <img class="fullWidth" src="{{ block.settings.image | img_url: "x920" }}">
     <div class="visibilityDiv visSlide">
            <div class="xsPadded2">
            {% if block.settings.icon-1 != blank %}
            <div class="fullWidth">
            <img class="icon1-{{ block.id }} iconImage" src="{{ block.settings.icon-1 | img_url: "400x" }}">
            <style>
              .icon1-{{ block.id }} {
                margin-bottom: {{ block.settings.iconMarBottom1 | times: 100 | divided_by: 1366.0 }}vw;
              }
              @media only screen and (max-width: 1009px) {
                .icon1-{{ block.id }} {
                  margin-bottom: {{ block.settings.iconMarBottomMob1 }}px;
                }
              }
            </style>
            </div>
        {% endif %}
            {% if block.settings.title1 != blank %}
            <div class="fullWidth">
            <h3 class="customHeading heading1-{{ block.id }}">{{ block.settings.title1 }}</h3>
            <style>
              h3.heading1-{{ block.id }} {
                margin: 0; 
                letter-spacing: {{ block.settings.title1Letter }}px; 
                font-size: {{ block.settings.title1Size | times: 100 | divided_by: 1366.0 }}vw; 
                color: {{ block.settings.title1Color }}; 
                line-height: {{ block.settings.title1Line | times: 100 | divided_by: 1366.0 }}vw;
                text-align: {{ block.settings.title1Align }};
                margin-bottom: {{ block.settings.title1MarBottom | times: 100 | divided_by: 1366.0 }}vw;
              }
              @media only screen and (max-width: 1009px) {
                h3.heading1-{{ block.id }} {
                  margin: 0; 
                  letter-spacing: {{ block.settings.title1LetterMob }}px; 
                  font-size: {{ block.settings.title1SizeMob }}px; 
                  color: {{ block.settings.title1ColorMob }}; 
                  line-height: {{ block.settings.title1LineMob }}px;
                  text-align: {{ block.settings.title1AlignMob }};
                  margin-bottom: {{ block.settings.title1MarBottomMob }}px;
                }
              }
            </style>
            </div>
        {% endif %}
            {% if block.settings.subtext != blank %}
            <p class="subtext-{{ block.id }} GT-400">
              {{ block.settings.subtext }}
      		</p>
            <style>
              .subtext-{{ block.id }} {
                margin: 0; 
                letter-spacing: {{ block.settings.subtextLetter }}px; 
                font-size: {{ block.settings.subtextSize | times: 100 | divided_by: 1440.0 }}vw; 
                color: {{ block.settings.subtextColor }}; 
                line-height: {{ block.settings.subtextLine | times: 100 | divided_by: 1440.0 }}vw;
                text-align: {{ block.settings.subtextAlign }};
                margin-bottom: {{ block.settings.subtextMarBottom | times: 100 | divided_by: 1440.0 }}vw;
              }
              @media only screen and (max-width: 1009px) {
                .subtext-{{ block.id }} {
                  margin: 0; 
                  letter-spacing: {{ block.settings.subtextLetterMob }}px; 
                  font-size: {{ block.settings.subtextSizeMob }}px; 
                  color: {{ block.settings.subtextColorMob }}; 
                  line-height: {{ block.settings.subtextLineMob }}px;
                  text-align: {{ block.settings.subtextAlignMob }};
                  margin-bottom: {{ block.settings.subtextMarBottomMob }}px;
                }
              }
            </style>
        {% endif %}
            {% if block.settings.link1 != blank %}
            <div style="margin-top: auto;" class="fullWidth">
            	<a class="imageLink" href="{{ block.settings.link1 }}">
                 <svg xmlns="http://www.w3.org/2000/svg" width="54" height="54" viewBox="0 0 54 54" fill="none">
                  <rect width="54" height="54" fill="white"/>
                  <path d="M18.9727 26.3855H33.1368" stroke="black" stroke-width="2"/>
                  <path d="M26.8275 19.6709L33.541 26.3844L26.8275 33.0979" stroke="black" stroke-width="2"/>
                  </svg>
            	</a>
            </div>
            {% endif %}
          </div>
          </div>
    </div>
  </div>
 {% endfor %}
</div>
<script>
  window.addEventListener('load', (event) => {
  	var elem = document.querySelector('.masonryDiv');
    var elem2= document.querySelectorAll(".galleryImageDiv")[1];
    if ($(window).width() > 1009) {
    var msnry = new Masonry( elem, {
      // options
      itemSelector: '.galleryImageDiv',
      horizontalOrder: true
    });
    }
  let filters = [];
    $(".functionButton.otherFunc").click(function(){
      if ($(this).hasClass("active")){
      $(this).removeClass("active");
      $(".galleryMainHolder").each(function(){
          	if ($(this).hasClass("galleryImageDiv")){
            }else{
          	$(this).addClass("galleryImageDiv");
            }
          	$(this).show();
        });
        if ($(window).width() > 1009) {
    		msnry = new Masonry( elem, {
              // options
              itemSelector: '.galleryImageDiv',
              horizontalOrder: true
            });
        }
        $(".functionButton").removeClass("active");
        $(".functionButton.allFunc").addClass("active");
      }else{
      $(".functionButton").removeClass("active");
      $(this).addClass("active");
      filters = $(this).attr("filter");
      $(".galleryMainHolder").each(function(){
          if($(this).attr("filterBy") == filters){
          	if ($(this).hasClass("galleryImageDiv")){
            }else{
          	$(this).addClass("galleryImageDiv");
            }
          	$(this).show();
          }else{
            $(this).removeClass("galleryImageDiv");
          	$(this).hide();
          }
        });
        if ($(window).width() > 1009) {
            msnry = new Masonry( elem, {
              // options
              itemSelector: '.galleryImageDiv',
              horizontalOrder: true
            });
        }
      }
      });
    
    
  $(".functionButton.allFunc, .cancelFunc").click(function(){
  	$(".galleryMainHolder").each(function(){
          	if ($(this).hasClass("galleryImageDiv")){
            }else{
          	$(this).addClass("galleryImageDiv");
            }
          	$(this).show();
        });
    	if ($(window).width() > 1009) {
    		msnry = new Masonry( elem, {
              // options
              itemSelector: '.galleryImageDiv',
              horizontalOrder: true
            });
        }
    $(".functionButton").removeClass("active");
    $(".functionButton.allFunc").addClass("active");
  });
    }); 
  /*$(document).ready(function(){
    $(".functionButton").click(function(){
      $(".functionButton").removeClass("active");
      $(this).addClass("active");
      filters.push($(this).attr("filter"));
      let hidden = false;
      $(".galleryMainHolder").each(function(){
        for (i = 0; i < filters.length; i++) {
          if($(this).attr("filterBy") == filters[i]){
          	hidden = true;
            break;
          }else{
          	hidden = false;
          }
        }
        if (hidden){}else{
        	$(this).removeClass("galleryImageDiv");
          	$(this).hide();
            msnry = new Masonry( elem, {
              // options
              itemSelector: '.galleryImageDiv',
              horizontalOrder: true
            });
        }
      });
    }); 
  });*/
</script>
{% schema %}
  {
    "name": "Gallery",
    "settings": [
		{
          "type": "text",
          "id": "marTop",
          "label": "Top margin (numbers only)"
        },
		{
          "type": "text",
          "id": "marBottom",
          "label": "Bottom margin (numbers only)"
        },
		{
          "type": "text",
          "id": "marTopMob",
          "label": "Top margin mobile (numbers only)"
        },
		{
          "type": "text",
          "id": "marBottomMob",
          "label": "Bottom margin mobile (numbers only)"
        },
		{
          "type": "text",
          "id": "padTop",
          "label": "Top padding (numbers only)"
        },
		{
          "type": "text",
          "id": "padBottom",
          "label": "Bottom padding (numbers only)"
        },
		{
          "type": "text",
          "id": "padLeft",
          "label": "Left padding (numbers only)",
		  "default": "145"
        },
		
		{
          "type": "text",
          "id": "padRight",
          "label": "Right padding (numbers only)",
	      "default": "145"
        },
		{
          "type": "text",
          "id": "padTopMob",
          "label": "Top padding mobile (numbers only)"
        },
		{
          "type": "text",
          "id": "padBottomMob",
          "label": "Bottom padding mobile (numbers only)"
        },
		{
          "type": "text",
          "id": "padLeftMob",
          "label": "Left padding mobile (numbers only)"
        },
		{
          "type": "text",
          "id": "padRightMob",
          "label": "Right padding mobile (numbers only)"
        },
		{
          "type": "color",
          "id": "backgroundColor",
          "label": "Background color"
        }
	],
	"blocks": [
      {
		"type": "Image",
      	"name": "Image",
        "settings": [
		  {
            "type": "text",
            "id": "category",
            "label": "Category"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
		  {
      "type": "image_picker",
      "id": "icon-1",
	  "label": "First icon"
    },
	{
          "type": "text",
          "id": "iconMarBottom1",
          "label": "Icon 1 bottom margin (numbers only)"
        },
	{
          "type": "text",
          "id": "iconMarBottomMob1",
          "label": "Icon 1 bottom margin mobile (numbers only)"
        },
	{
      "type": "url",
      "id": "link1",
      "label": "Link 1"
    },
    {
          "type": "header",
          "content": "Title Desktop"
        },
        {
          "type": "text",
          "id": "title1",
          "label": "Heading"
        },
		{
          "type": "text",
          "id": "title1Size",
          "label": "Heading Size (numbers only)"
        },
		{
          "type": "text",
          "id": "title1Line",
          "label": "Heading Line Height (numbers only)"
        },
		{
          "type": "text",
          "id": "title1Letter",
          "label": "Heading Letter Spacing (numbers only)"
        },
		{
          "type": "color",
          "id": "title1Color",
          "label": "Heading color"
        },
		{
          "type": "select",
          "id": "title1Align",
          "label": "Title align",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ],
          "default": "center"
        },
		{
          "type": "text",
          "id": "title1MarBottom",
          "label": "Title bottom margin (numbers only)"
        },
        {
          "type": "header",
          "content": "Title Mobile"
        },
		{
          "type": "text",
          "id": "title1SizeMob",
          "label": "Heading Size (numbers only)"
        },
		{
          "type": "text",
          "id": "title1LineMob",
          "label": "Heading Line Height (numbers only)"
        },
		{
          "type": "text",
          "id": "title1LetterMob",
          "label": "Heading Letter Spacing (numbers only)"
        },
		{
          "type": "color",
          "id": "title1ColorMob",
          "label": "Heading color"
        },
		{
          "type": "select",
          "id": "title1AlignMob",
          "label": "Title align",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ],
          "default": "center"
        },
		{
          "type": "text",
          "id": "title1MarBottomMob",
          "label": "Title bottom margin mobile (numbers only)"
        },
		{
          "type": "header",
          "content": "Subtitle Desktop"
        },
        {
          "type": "text",
          "id": "subtext",
          "label": "Subtitle",
          "default": "Slide title"
        },
		{
          "type": "text",
          "id": "subtextSize",
          "label": "Subtitle Size (numbers only)"
        },
		{
          "type": "text",
          "id": "subtextLine",
          "label": "Subtitle Line Height (numbers only)"
        },
		{
          "type": "text",
          "id": "subtextLetter",
          "label": "Subtitle Letter Spacing (numbers only)"
        },
		{
          "type": "color",
          "id": "subtextColor",
          "label": "Subtitle color"
        },
		{
          "type": "select",
          "id": "subtextAlign",
          "label": "Subtitle align",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ],
          "default": "center"
        },
		{
          "type": "text",
          "id": "subtextMarBottom",
          "label": "Subtitle bottom margin (numbers only)"
        },
        {
          "type": "header",
          "content": "Subtitle Mobile"
        },
		{
          "type": "text",
          "id": "subtextSizeMob",
          "label": "Subtitle Size (numbers only)"
        },
		{
          "type": "text",
          "id": "subtextLineMob",
          "label": "Subtitle Line Height (numbers only)"
        },
		{
          "type": "text",
          "id": "subtextLetterMob",
          "label": "Subtitle Letter Spacing (numbers only)"
        },
		{
          "type": "color",
          "id": "subtextColorMob",
          "label": "Subtitle color"
        },
		{
          "type": "select",
          "id": "subtextAlignMob",
          "label": "Subtitle align",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ],
          "default": "center"
        },
		{
          "type": "text",
          "id": "subtextMarBottomMob",
          "label": "Subtitle mobile bottom margin (numbers only)"
        }
        ]
      }
    ],
    "presets": [
      {
        "category": "Portfolio",
        "name": "Gallery",
        "settings": {}
      }
    ]
  }
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
